# ======================================================================================
# Docker 배포용 환경 변수 설정 예시 (env.docker.example)
# ======================================================================================
# 
# 사용법:
# 1. 이 파일을 .env.docker로 복사하세요: cp env.docker.example .env.docker
# 2. 각 값들을 실제 값으로 교체하세요
# 3. .env.docker 파일은 보안상 git에 커밋하지 마세요
#
# ======================================================================================

# ======================================================================================
# 🔑 필수 설정 - CLOVA Studio API
# ======================================================================================
CLOVA_STUDIO_API_KEY=your_clova_studio_api_key_here

# ======================================================================================
# 🌐 선택적 설정 - Naver Search API (웹 검색 기능용)
# ======================================================================================
NAVER_CLIENT_ID=your_naver_client_id_here
NAVER_CLIENT_SECRET=your_naver_client_secret_here

# ======================================================================================
# 🗄️ 데이터베이스 설정
# ======================================================================================
DB_PATH=/app/data/cafe_vector_db
COLLECTION_NAME=cafe_benefits

# ======================================================================================
# 🤖 AI 모델 설정
# ======================================================================================
TEMPERATURE=0.1
MAX_TOKENS=1024
TOP_K=5

# ======================================================================================
# 🔍 검색 및 개인화 설정
# ======================================================================================
SIMILARITY_THRESHOLD=0.7
PERSONALIZATION_WEIGHT=0.3

# ======================================================================================
# ⏱️ 타임아웃 설정 (초)
# ======================================================================================
EMBEDDING_TIMEOUT=15
COMPLETION_TIMEOUT=30
MAX_RETRIES=3

# ======================================================================================
# 🌍 Flask 서버 설정
# ======================================================================================
PORT=5000
HOST=0.0.0.0
FLASK_DEBUG=false
FLASK_ENV=production

# ======================================================================================
# 🏷️ 환경 구분
# ======================================================================================
ENVIRONMENT=production
# development, staging, production 중 선택

# ======================================================================================
# 📝 로깅 설정
# ======================================================================================
LOG_LEVEL=INFO
# DEBUG, INFO, WARNING, ERROR 중 선택

# ======================================================================================
# 🔒 보안 설정
# ======================================================================================
SECRET_KEY=your-super-secret-key-here-change-this-in-production-docker
# 프로덕션에서는 반드시 복잡한 임의의 문자열로 변경하세요

ALLOWED_ORIGINS=*
# CORS 허용 도메인 (프로덕션에서는 구체적인 도메인 지정 권장)
# 예: https://yourdomain.com,https://api.yourdomain.com

# ======================================================================================
# 🚀 Gunicorn/WSGI 서버 설정
# ======================================================================================
WORKERS=4
# CPU 코어 수의 2배가 권장값

THREADS=2
# 스레드 수

TIMEOUT=120
# 요청 타임아웃 (초)

# ======================================================================================
# 🎯 Redis 설정 (캐싱 및 세션 저장용)
# ======================================================================================
REDIS_HOST=redis
REDIS_PORT=6379
REDIS_PASSWORD=your_redis_password_here_change_this
REDIS_DB=0

# ======================================================================================
# 🐘 PostgreSQL 설정 (선택적 - 메타데이터 저장용)
# ======================================================================================
POSTGRES_HOST=postgres
POSTGRES_PORT=5432
POSTGRES_DB=benefits_api
POSTGRES_USER=benefits
POSTGRES_PASSWORD=your_postgres_password_here_change_this

# ======================================================================================
# 🔔 모니터링 및 알림 설정 (선택적)
# ======================================================================================
# Slack 웹훅 (Watchtower 알림용)
SLACK_WEBHOOK_URL=https://hooks.slack.com/services/YOUR/SLACK/WEBHOOK

# Sentry DSN (에러 리포팅용)
# SENTRY_DSN=your_sentry_dsn_here

# ======================================================================================
# 🐳 Docker 컨테이너 설정
# ======================================================================================
# 컨테이너 이름 접두사
COMPOSE_PROJECT_NAME=benefits-api

# 네트워크 이름
NETWORK_NAME=benefits-network

# ======================================================================================
# 📊 성능 튜닝 설정
# ======================================================================================
# 최대 업로드 크기 (바이트)
MAX_CONTENT_LENGTH=16777216

# 최대 연결 수
MAX_CONNECTIONS=1000

# 캐시 TTL (초)
CACHE_TTL=3600

# ======================================================================================
# 🔧 개발/디버깅 설정
# ======================================================================================
# 개발 모드에서만 사용
# PYTHONPATH=/app
# FLASK_RELOAD=true
# FLASK_RUN_HOST=0.0.0.0
# FLASK_RUN_PORT=5000

# ======================================================================================
# 🕐 의존성 서비스 대기 설정
# ======================================================================================
# 컨테이너 시작시 다른 서비스 대기
WAIT_FOR_REDIS=true
# WAIT_FOR_POSTGRES=true

# ======================================================================================
# 📱 SSL/TLS 설정 (HTTPS 사용시)
# ======================================================================================
# SSL 인증서 경로 (컨테이너 내부)
# SSL_CERT_PATH=/etc/nginx/ssl/fullchain.pem
# SSL_KEY_PATH=/etc/nginx/ssl/privkey.pem

# Let's Encrypt 설정
# CERTBOT_EMAIL=your-email@example.com
# CERTBOT_DOMAIN=yourdomain.com

# ======================================================================================
# 🎛️ 고급 설정
# ======================================================================================
# JVM 힙 크기 (Java 사용시)
# JAVA_OPTS=-Xmx512m -Xms256m

# Python 최적화
PYTHONOPTIMIZE=1
PYTHONDONTWRITEBYTECODE=1

# 메모리 제한 (Docker)
# MEM_LIMIT=1g
# MEMSWAP_LIMIT=1g

# CPU 제한 (Docker)
# CPUS=1.0
