# ======================================================================================
# EC2 서버용 Nginx 설정 - nginx.conf
# ======================================================================================
#
# 설치 위치: /etc/nginx/sites-available/benefits-api
# 심볼릭 링크: ln -s /etc/nginx/sites-available/benefits-api /etc/nginx/sites-enabled/
#
# 사용 명령어:
#   sudo nginx -t (설정 테스트)
#   sudo systemctl reload nginx
#
# ======================================================================================

# HTTP 서버 (Let's Encrypt 인증서 발급 및 HTTP to HTTPS 리다이렉트용)
server {
    listen 80;
    server_name your-domain.com www.your-domain.com;  # 실제 도메인으로 변경
    
    # Let's Encrypt 인증서 발급을 위한 경로
    location /.well-known/acme-challenge/ {
        root /var/www/html;
    }
    
    # 나머지 모든 요청을 HTTPS로 리다이렉트
    location / {
        return 301 https://$server_name$request_uri;
    }
}

# HTTPS 서버 (메인 서비스)
server {
    listen 443 ssl http2;
    server_name your-domain.com www.your-domain.com;  # 실제 도메인으로 변경
    
    # SSL 인증서 설정 (Let's Encrypt)
    ssl_certificate /etc/letsencrypt/live/your-domain.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/your-domain.com/privkey.pem;
    
    # SSL 보안 설정
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers off;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:50m;
    ssl_stapling on;
    ssl_stapling_verify on;
    
    # 보안 헤더
    add_header Strict-Transport-Security "max-age=63072000" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self'; frame-ancestors 'self';" always;
    
    # 로그 설정
    access_log /var/log/nginx/benefits-api.access.log;
    error_log /var/log/nginx/benefits-api.error.log;
    
    # Gzip 압축
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        application/atom+xml
        application/geo+json
        application/javascript
        application/x-javascript
        application/json
        application/ld+json
        application/manifest+json
        application/rdf+xml
        application/rss+xml
        application/xhtml+xml
        application/xml
        font/eot
        font/otf
        font/ttf
        image/svg+xml
        text/css
        text/javascript
        text/plain
        text/xml;
    
    # 정적 파일 처리 (캐싱)
    location /static {
        alias /opt/benefits-api/app/static;
        expires 1y;
        add_header Cache-Control "public, immutable";
        
        # 파일이 없으면 404
        try_files $uri =404;
    }
    
    # 파비콘
    location = /favicon.ico {
        alias /opt/benefits-api/app/static/favicon.ico;
        expires 1y;
        add_header Cache-Control "public, immutable";
        access_log off;
    }
    
    # 로봇 텍스트
    location = /robots.txt {
        alias /opt/benefits-api/app/static/robots.txt;
        expires 1d;
        access_log off;
    }
    
    # API 헬스체크 (로그 제외)
    location = /health {
        proxy_pass http://127.0.0.1:5000/health;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        access_log off;
        
        # 헬스체크 타임아웃 (짧게)
        proxy_connect_timeout 5s;
        proxy_send_timeout 5s;
        proxy_read_timeout 5s;
    }
    
    # 메인 애플리케이션 프록시
    location / {
        proxy_pass http://127.0.0.1:5000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # 타임아웃 설정
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # 버퍼링 설정
        proxy_buffering on;
        proxy_buffer_size 128k;
        proxy_buffers 4 256k;
        proxy_busy_buffers_size 256k;
        proxy_temp_file_write_size 256k;
        
        # HTTP 버전 및 연결 유지
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        
        # 에러 페이지 처리
        proxy_intercept_errors on;
        error_page 502 503 504 /50x.html;
    }
    
    # 50x 에러 페이지
    location = /50x.html {
        root /var/www/html;
        internal;
    }
    
    # 업로드 크기 제한
    client_max_body_size 10M;
    client_body_timeout 60s;
    client_header_timeout 60s;
    
    # 연결 수 제한 (DDoS 방지)
    limit_conn_zone $binary_remote_addr zone=conn_limit_per_ip:10m;
    limit_conn conn_limit_per_ip 20;
    
    # 요청 수 제한 (Rate Limiting)
    limit_req_zone $binary_remote_addr zone=req_limit_per_ip:10m rate=10r/s;
    limit_req zone=req_limit_per_ip burst=20 nodelay;
}

# 도메인이 없는 경우를 위한 기본 HTTP 서버
server {
    listen 80 default_server;
    server_name _;
    
    # 보안 헤더 (최소한)
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    
    # 로그 설정
    access_log /var/log/nginx/benefits-api.access.log;
    error_log /var/log/nginx/benefits-api.error.log;
    
    # 헬스체크
    location = /health {
        proxy_pass http://127.0.0.1:5000/health;
        access_log off;
    }
    
    # 메인 애플리케이션
    location / {
        proxy_pass http://127.0.0.1:5000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # 기본 타임아웃
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }
    
    # 업로드 크기 제한
    client_max_body_size 10M;
}
